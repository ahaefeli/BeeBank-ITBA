{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\agush\\\\OneDrive\\\\Documents\\\\GitHub\\\\BeeBank-ITBA\\\\dynamic-page\\\\src\\\\components\\\\logged\\\\conversor-popup.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CurrencyConverter() {\n  _s();\n  const [selectedCurrency, setSelectedCurrency] = useState('ARS');\n  const [amount, setAmount] = useState('');\n  const [convertedValues, setConvertedValues] = useState({\n    ARS: 0,\n    USD: 0,\n    EUR: 0\n  });\n  const handleCurrencyChange = e => {\n    setSelectedCurrency(e.target.value);\n  };\n  const handleAmountChange = e => {\n    setAmount(e.target.value);\n  };\n  const convertCurrency = (amount, currency) => {\n    // Define la lista de divisas que deseas mostrar\n    const currenciesToShow = ['ARS', 'USD', 'EUR'];\n\n    // Obtén las tasas de cambio de ExchangeRatesAPI\n    const apiKey = 'TU_CLAVE_DE_API';\n    const apiUrl = `https://api.apilayer.com/exchangerates_data/latest?base=${selectedCurrency}&symbols=${currenciesToShow.join(',')}&apikey=${apiKey}`;\n    fetch(apiUrl).then(response => response.json()).then(data => {\n      const rates = data.rates;\n\n      // Filtra las tasas de cambio para incluir solo las divisas deseadas\n      const convertedValues = {};\n      currenciesToShow.forEach(currency => {\n        convertedValues[currency] = (amount * rates[currency]).toFixed(2);\n      });\n      setConvertedValues(convertedValues);\n    }).catch(error => {\n      console.error('Error al obtener tasas de cambio:', error);\n    });\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      convertCurrency(amount, selectedCurrency);\n    }\n  };\n  useEffect(() => {\n    // Realiza la conversión inicial al cargar el componente\n    convertCurrency(1, selectedCurrency);\n  }, [selectedCurrency]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Conversor de Moneda\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedCurrency,\n      onChange: handleCurrencyChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"ARS\",\n        children: \"ARS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"USD\",\n        children: \"USD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"EUR\",\n        children: \"EUR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: amount,\n      onChange: handleAmountChange,\n      onKeyPress: handleKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => convertCurrency(amount, selectedCurrency),\n      children: \"Convertir\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: currenciesToShow.map(currency => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [currency, \": $\", convertedValues[currency]]\n      }, currency, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(CurrencyConverter, \"aiOLTY2D6yBJhWu4O0AKrXoqAD4=\");\n_c = CurrencyConverter;\nvar _c;\n$RefreshReg$(_c, \"CurrencyConverter\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CurrencyConverter","_s","selectedCurrency","setSelectedCurrency","amount","setAmount","convertedValues","setConvertedValues","ARS","USD","EUR","handleCurrencyChange","e","target","value","handleAmountChange","convertCurrency","currency","currenciesToShow","apiKey","apiUrl","join","fetch","then","response","json","data","rates","forEach","toFixed","catch","error","console","handleKeyPress","key","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","onKeyPress","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/agush/OneDrive/Documents/GitHub/BeeBank-ITBA/dynamic-page/src/components/logged/conversor-popup.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nexport default function CurrencyConverter() {\r\n  const [selectedCurrency, setSelectedCurrency] = useState('ARS');\r\n  const [amount, setAmount] = useState('');\r\n  const [convertedValues, setConvertedValues] = useState({\r\n    ARS: 0,\r\n    USD: 0,\r\n    EUR: 0,\r\n  });\r\n\r\n  const handleCurrencyChange = (e) => {\r\n    setSelectedCurrency(e.target.value);\r\n  };\r\n\r\n  const handleAmountChange = (e) => {\r\n    setAmount(e.target.value);\r\n  };\r\n\r\n  const convertCurrency = (amount, currency) => {\r\n    // Define la lista de divisas que deseas mostrar\r\n    const currenciesToShow = ['ARS', 'USD', 'EUR'];\r\n\r\n    // Obtén las tasas de cambio de ExchangeRatesAPI\r\n    const apiKey = 'TU_CLAVE_DE_API';\r\n    const apiUrl = `https://api.apilayer.com/exchangerates_data/latest?base=${selectedCurrency}&symbols=${currenciesToShow.join(',')}&apikey=${apiKey}`;\r\n\r\n    fetch(apiUrl)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const rates = data.rates;\r\n\r\n        // Filtra las tasas de cambio para incluir solo las divisas deseadas\r\n        const convertedValues = {};\r\n        currenciesToShow.forEach((currency) => {\r\n          convertedValues[currency] = (amount * rates[currency]).toFixed(2);\r\n        });\r\n\r\n        setConvertedValues(convertedValues);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error al obtener tasas de cambio:', error);\r\n      });\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      convertCurrency(amount, selectedCurrency);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Realiza la conversión inicial al cargar el componente\r\n    convertCurrency(1, selectedCurrency);\r\n  }, [selectedCurrency]);\r\n\r\n  return (\r\n    <div>\r\n      <h4>Conversor de Moneda</h4>\r\n      <select value={selectedCurrency} onChange={handleCurrencyChange}>\r\n        <option value=\"ARS\">ARS</option>\r\n        <option value=\"USD\">USD</option>\r\n        <option value=\"EUR\">EUR</option>\r\n      </select>\r\n      <input\r\n        type=\"number\"\r\n        value={amount}\r\n        onChange={handleAmountChange}\r\n        onKeyPress={handleKeyPress}\r\n      />\r\n      <button onClick={() => convertCurrency(amount, selectedCurrency)}>\r\n        Convertir\r\n      </button>\r\n      <div>\r\n        {currenciesToShow.map((currency) => (\r\n          <p key={currency}>\r\n            {currency}: ${convertedValues[currency]}\r\n          </p>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}