{"ast":null,"code":"import React, { useState } from 'react';\nvar [password, setPassword] = useState('');\nvar [passwordError, setPasswordError] = useState('');\nvar [isSubmitDisabled, setIsSubmitDisabled] = useState(true);\nexport function LoginFuncionality() {\n  const handlePasswordChange = e => {\n    const newPassword = e.target.value;\n    setPassword(newPassword);\n    if (newPassword.length < 8) {\n      setPasswordError('La contraseña debe tener al menos 8 caracteres');\n      setIsSubmitDisabled(true);\n    } else if (!/[A-Z]/.test(newPassword) || !/[0-9]/.test(newPassword) || !/[!@#$%^&*]/.test(newPassword)) {\n      setPasswordError('La contraseña debe contener al menos una letra mayúscula, un número y un carácter especial');\n      setIsSubmitDisabled(true);\n    } else {\n      setPasswordError('');\n      setIsSubmitDisabled(false);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Puedes realizar alguna acción aquí si es necesario, pero no es necesario cambiar isSubmitDisabled\n  };\n}\n_c = LoginFuncionality;\nvar _c;\n$RefreshReg$(_c, \"LoginFuncionality\");","map":{"version":3,"names":["React","useState","password","setPassword","passwordError","setPasswordError","isSubmitDisabled","setIsSubmitDisabled","LoginFuncionality","handlePasswordChange","e","newPassword","target","value","length","test","handleSubmit","preventDefault","_c","$RefreshReg$"],"sources":["C:/Users/agush/OneDrive/Documents/GitHub/BeeBank-ITBA/dynamic-page/src/js/login-functionality.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nvar [password, setPassword] = useState('');\r\nvar [passwordError, setPasswordError] = useState('');\r\nvar [isSubmitDisabled, setIsSubmitDisabled] = useState(true);\r\n\r\nexport function LoginFuncionality() \r\n{\r\n  \r\n    const handlePasswordChange = (e) => {\r\n      const newPassword = e.target.value;\r\n      setPassword(newPassword);\r\n  \r\n      if (newPassword.length < 8) {\r\n        setPasswordError('La contraseña debe tener al menos 8 caracteres');\r\n        setIsSubmitDisabled(true);\r\n      } else if (!/[A-Z]/.test(newPassword) || !/[0-9]/.test(newPassword) || !/[!@#$%^&*]/.test(newPassword)) {\r\n        setPasswordError('La contraseña debe contener al menos una letra mayúscula, un número y un carácter especial');\r\n        setIsSubmitDisabled(true);\r\n      } else {\r\n        setPasswordError('');\r\n        setIsSubmitDisabled(false);\r\n      }\r\n    };\r\n  \r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      // Puedes realizar alguna acción aquí si es necesario, pero no es necesario cambiar isSubmitDisabled\r\n    }\r\n  \r\n}"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,IAAI,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;AAC1C,IAAI,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;AACpD,IAAI,CAACK,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;AAE5D,OAAO,SAASO,iBAAiBA,CAAA,EACjC;EAEI,MAAMC,oBAAoB,GAAIC,CAAC,IAAK;IAClC,MAAMC,WAAW,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAClCV,WAAW,CAACQ,WAAW,CAAC;IAExB,IAAIA,WAAW,CAACG,MAAM,GAAG,CAAC,EAAE;MAC1BT,gBAAgB,CAAC,gDAAgD,CAAC;MAClEE,mBAAmB,CAAC,IAAI,CAAC;IAC3B,CAAC,MAAM,IAAI,CAAC,OAAO,CAACQ,IAAI,CAACJ,WAAW,CAAC,IAAI,CAAC,OAAO,CAACI,IAAI,CAACJ,WAAW,CAAC,IAAI,CAAC,YAAY,CAACI,IAAI,CAACJ,WAAW,CAAC,EAAE;MACtGN,gBAAgB,CAAC,4FAA4F,CAAC;MAC9GE,mBAAmB,CAAC,IAAI,CAAC;IAC3B,CAAC,MAAM;MACLF,gBAAgB,CAAC,EAAE,CAAC;MACpBE,mBAAmB,CAAC,KAAK,CAAC;IAC5B;EACF,CAAC;EAED,MAAMS,YAAY,GAAIN,CAAC,IAAK;IAC1BA,CAAC,CAACO,cAAc,CAAC,CAAC;IAClB;EACF,CAAC;AAEL;AAACC,EAAA,GAxBeV,iBAAiB;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}